<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
           	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           	http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd">

	<beans:import resource="security-app-context.xml"/>
	<beans:import resource="classpath*:org/opengeoportal/**/applicationContext.xml" />
	<context:annotation-config />
	<context:property-placeholder location="WEB-INF/ogp.properties,classpath*:org/opengeoportal/**/*.properties" />

	<!--experimental -->
    <oxm:jaxb2-marshaller id="marshaller" >
    	<oxm:class-to-be-bound name="org.opengeoportal.ogc.wmc.jaxb.ViewContextType"/>
    </oxm:jaxb2-marshaller>


    
	<beans:bean id="proxyFactory" class="org.opengeoportal.proxy.ProxyFactory"/>

	<beans:bean id="proxy.simple" class="org.opengeoportal.proxy.GenericProxyImpl" scope="prototype" lazy-init="true" />


	<!-- config -->
	<beans:bean id="properties.generalOgp" class="org.opengeoportal.config.PropertiesFile">
		<beans:property name="resource" value="WEB-INF/ogp.properties" />
	</beans:bean>
	
	<beans:bean id="properties.repositories" class="org.opengeoportal.config.PropertiesFile">
		<beans:property name="resource" value="WEB-INF/repositories.properties" />
	</beans:bean>
	
	<beans:bean id="config.ogp" class="org.opengeoportal.config.ogp.OgpConfigRetrieverFromProperties" init-method="load" >
		<beans:property name="propertiesFile" ref="properties.generalOgp" />
	</beans:bean>
	
	<beans:bean id="config.proxy" class="org.opengeoportal.config.proxy.ProxyConfigRetrieverFromProperties" init-method="load" >
		<beans:property name="propertiesFile" ref="properties.generalOgp" />
	</beans:bean>
	
	<beans:bean id="config.repositories" class="org.opengeoportal.config.repositories.RepositoryConfigRetrieverFromProperties" init-method="load" >
		<beans:property name="propertiesFile" ref="properties.repositories" />
	</beans:bean>
	
	<beans:bean id="config.search" class="org.opengeoportal.config.search.SearchConfigRetrieverFromProperties" init-method="load" >
		<beans:property name="propertiesFile" ref="properties.generalOgp" />
	</beans:bean>
	
	<beans:bean id="properties.xml" class="org.opengeoportal.config.XmlProperties" init-method="load" >
		<beans:property name="config_file" value="WEB-INF/ogp_config.xml"/>
	</beans:bean>
	
	<beans:bean id="config.topics" class="org.opengeoportal.config.topics.TopicsConfigRetriever" init-method="load" />
	<beans:bean id="config.datatypes" class="org.opengeoportal.config.datatypes.DatatypesConfigRetriever" init-method="load" />


	<beans:bean id="jsonpCallbackFilter"
		class="org.opengeoportal.utilities.http.JsonpCallbackFilter" />
	<beans:bean id="imageHandlerFactory" class="org.opengeoportal.image.ImageHandlerFactory" />
	
	<beans:bean id="imageHandler" class="org.opengeoportal.image.ImageHandlerImpl" scope="prototype" lazy-init="true" />

	<beans:bean id="imageCompositor" class="org.opengeoportal.image.ImageCompositorImpl"
		scope="prototype" >
		<beans:property name="maxSizeMB" value="${maxImageSize}" />
	</beans:bean>
	
	<beans:bean id="imageDownloaderFactory" class="org.opengeoportal.image.ImageDownloaderFactory" />

	<beans:bean id="imageDownloader" class="org.opengeoportal.image.ImageDownloaderImpl" scope="prototype" lazy-init="true" />

	<beans:bean id="getFeatureInfoFactory" class="org.opengeoportal.featureinfo.FeatureInfoFactory" />

	<beans:bean id="getFeatureInfo.wms" class="org.opengeoportal.featureinfo.WmsGetFeatureInfo" scope="prototype" lazy-init="true" />
		
	<beans:bean id="getFeatureInfo.arcgis" class="org.opengeoportal.featureinfo.ArcGISIdentify" scope="prototype" lazy-init="true" />
	
	<beans:bean id="exportHandlerFactory.geocommons"
		class="org.opengeoportal.export.geocommons.GeoCommonsExportHandlerFactory" />
		
	<beans:bean id="exportHandler.geocommons"
		class="org.opengeoportal.export.geocommons.GeoCommonsExportHandlerImpl"
		scope="prototype" />
	<beans:bean id="exporter.geocommons"
		class="org.opengeoportal.export.geocommons.GeoCommonsExporterImpl"
		scope="prototype" />
	<beans:bean id="restClient.geocommons"
		class="org.opengeoportal.export.geocommons.GeoCommonsJsonClient"
		scope="prototype" />


	<beans:bean id="requestStatusManager"
		class="org.opengeoportal.download.RequestStatusManagerImpl" />

	<beans:bean id="cleanupDirectory.download"
		class="org.opengeoportal.utilities.CleanupDirectoryImpl" >
		<beans:property name="maxAge" value="${maxFileAge}" />
	</beans:bean>

	<beans:bean id="urlShortener.Google"
		class="org.opengeoportal.utilities.UrlShortenerGoogle" scope="prototype">
		<beans:property name="propertiesFile" ref="properties.generalOgp" />
	</beans:bean>

	<beans:bean id="transformerProvider" class="org.opengeoportal.metadata.CachingTransformerProvider" />

	<beans:bean id="xmlParserFactory" class="org.opengeoportal.metadata.XmlParserFactory" />
	
	<beans:bean id="xmlParser" factory-bean="xmlParserFactory" factory-method="getParser" 
		class="org.opengeoportal.metadata.XmlParserImpl" scope="prototype"/>
	
	<beans:bean id="fgdcParser" class="org.opengeoportal.metadata.FgdcMetadataParser" scope="prototype" />
	

	<beans:bean id="layerInfoRetriever.solr"
		class="org.opengeoportal.metadata.SolrLayerInfoRetriever" />

	<beans:bean id="metadataRetriever.solr" class="org.opengeoportal.download.MetadataFromSolr" >
		<beans:property name="fgdcStyleSheet" value="${styleSheet.fgdc}"/>
		<beans:property name="iso19139StyleSheet" value="${styleSheet.iso19139}"/>
	</beans:bean>

	<beans:bean id="configRetriever.download"
		class="org.opengeoportal.download.config.OgpDownloadConfigRetriever">
		<beans:property name="resource" value="resources/ogpDownloadConfig.json" />
	</beans:bean>

	<beans:bean id="quickDownload"
		class="org.opengeoportal.utilities.QuickWfsDownload" scope="prototype" />

	<beans:bean id="directoryRetriever.simple" class="org.opengeoportal.utilities.DirectoryRetrieverImpl" >
		<beans:constructor-arg index="0" value="${ogp.downloadDir}" />
	</beans:bean>
	
	<beans:bean id="downloadPackager"
		class="org.opengeoportal.download.DownloadPackagerImpl" scope="prototype" />

	<beans:bean id="downloadHandlerFactory" class="org.opengeoportal.download.DownloadHandlerFactory" />
	
 	<beans:bean id="downloadHandler" class="org.opengeoportal.download.DownloadHandlerImpl" scope="prototype" lazy-init="true" />

 
	<beans:bean id="layerDownloaderProvider" class="org.opengeoportal.download.LayerDownloaderProvider" scope="prototype" />



	<!-- http requesters -->
	<beans:bean id="httpRequester.generic"
		class="org.opengeoportal.utilities.http.HttpComponentsHttpRequester"
		scope="prototype">
		<beans:property name="ogpHttpClient" ref="httpClient.pooling" />
	</beans:bean>

	<beans:bean id="httpRequester.allTrustingCert"
		class="org.opengeoportal.utilities.http.HttpComponentsHttpRequester"
		scope="prototype">
		<beans:property name="ogpHttpClient" ref="httpClient.pooling.allTrusting" />
	</beans:bean>

	<beans:bean id="httpClient.pooling"
		class="org.opengeoportal.utilities.http.PoolingHttpClient" init-method="init">
		<beans:property name="maxConnections" value="${connectionPool.maxTotal}" />
		<beans:property name="maxConnectionsRt" value="${connectionPool.maxPerRoute}" />
	</beans:bean>
	
	<beans:bean id="httpClient.pooling.allTrusting"
		class="org.opengeoportal.utilities.http.AllTrustingCertPoolingHttpClient" />

	<!-- Download methods -->
		

	<beans:bean id="featureSourceRetriever.wfs" class="org.opengeoportal.download.methods.WfsFeatureSourceRetriever" scope="prototype"/>

	<beans:bean id="featureSourceToShape.wfs" class="org.opengeoportal.download.methods.FeatureSourceToShapeImpl"
		scope="prototype">
		<beans:property name="featureSourceRetriever" ref="featureSourceRetriever.wfs"/>
	</beans:bean>
	
	<beans:bean id="downloadMethod.ftpFile"
		class="org.opengeoportal.download.methods.FtpFileDownloadMethod" scope="prototype" />

	<beans:bean id="downloadMethod.wms"
		class="org.opengeoportal.download.methods.WmsDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wfs"
		class="org.opengeoportal.download.methods.WfsDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wfs.proxied"
		class="org.opengeoportal.download.methods.ProxiedWfsDownloadMethod"
		scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.kmlReflector"
		class="org.opengeoportal.download.methods.KmlDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wcs"
		class="org.opengeoportal.download.methods.WcsDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.wcs.proxied"
		class="org.opengeoportal.download.methods.ProxiedWcsDownloadMethod"
		scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.file"
		class="org.opengeoportal.download.methods.FileDownloadMethod" scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>

	<beans:bean id="downloadMethod.email.HGL"
		class="org.opengeoportal.download.methods.HGLEmailDownloadMethod"
		scope="prototype">
		<beans:property name="httpRequester" ref="httpRequester.generic" />
	</beans:bean>
	
	<beans:bean id="downloadMethod.geotools.wfs"
		class="org.opengeoportal.download.methods.GeoToolsDownloadMethod"
		scope="prototype"> 
		<beans:property name="featureSourceToShape" ref="featureSourceToShape.wfs" />
	</beans:bean>


	<!-- LayerDownloader -->
	<beans:bean id="layerDownloader.wfs"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wfs" />
	</beans:bean>
	<beans:bean id="layerDownloader.wcs"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wcs" />
	</beans:bean>
	<beans:bean id="layerDownloader.wfs.proxied"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wfs.proxied" />
	</beans:bean>
	<beans:bean id="layerDownloader.wcs.proxied"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wcs.proxied" />
	</beans:bean>
	<beans:bean id="layerDownloader.kml"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wms" />
	</beans:bean>
	<beans:bean id="layerDownloader.wms"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.wms" />
	</beans:bean>
	<beans:bean id="layerDownloader.kml.reflector"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.kmlReflector" />
	</beans:bean>
	<beans:bean id="layerDownloader.file"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.file" />
	</beans:bean>
	<beans:bean id="layerDownloader.ftpFile"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.ftpFile" />
	</beans:bean>
	<beans:bean id="layerDownloader.geotools.wfs"
		class="org.opengeoportal.download.PerLayerDownloader" scope="prototype">
		<beans:property name="perLayerDownloadMethod" ref="downloadMethod.geotools.wfs" />
	</beans:bean>

	<!-- HGL specific -->

	<beans:bean id="layerDownloader.email.HGL"
		class="org.opengeoportal.download.EmailLayerDownloader" scope="prototype">
		<beans:property name="emailDownloadMethod" ref="downloadMethod.email.HGL" />
	</beans:bean>

	<beans:bean id="ogcInfoRequester.wms" class="org.opengeoportal.ogc.OgcInfoRequesterImpl"
		scope="prototype">
		<beans:property name="ogcInfoRequest" ref="ogcInfoRequest.wms" />
		<beans:property name="httpRequester" ref="httpRequester.generic" />
		<beans:property name="proxyConfigRetriever" ref="config.proxy" />
	</beans:bean>

	<beans:bean id="ogcInfoRequester.wfs" class="org.opengeoportal.ogc.OgcInfoRequesterImpl"
		scope="prototype">
		<beans:property name="ogcInfoRequest" ref="ogcInfoRequest.wfs" />
		<beans:property name="httpRequester" ref="httpRequester.generic" />
		<beans:property name="proxyConfigRetriever" ref="config.proxy" />
	</beans:bean>

	<beans:bean id="ogcInfoRequester.wcs_1_1_1" class="org.opengeoportal.ogc.OgcInfoRequesterImpl"
		scope="prototype">
		<beans:property name="ogcInfoRequest" ref="ogcInfoRequest.wcs_1_1_1" />
		<beans:property name="httpRequester" ref="httpRequester.generic" />
		<beans:property name="proxyConfigRetriever" ref="config.proxy" />
	</beans:bean>

	<beans:bean id="ogcInfoRequester.wcs_1_0_0" class="org.opengeoportal.ogc.OgcInfoRequesterImpl"
		scope="prototype">
		<beans:property name="ogcInfoRequest" ref="ogcInfoRequest.wcs_1_0_0" />
		<beans:property name="httpRequester" ref="httpRequester.generic" />
		<beans:property name="proxyConfigRetriever" ref="config.proxy" />
	</beans:bean>

	<beans:bean id="ogcInfoRequest.wms" class="org.opengeoportal.ogc.wms.WmsDescribeLayer"
		scope="prototype" />
	<beans:bean id="ogcInfoRequest.wfs"
		class="org.opengeoportal.ogc.wfs.WfsDescribeFeature" scope="prototype" />
	<beans:bean id="ogcInfoRequest.wcs_1_1_1"
		class="org.opengeoportal.ogc.wcs.WcsDescribeCoverage1_1_1" scope="prototype" />
	<beans:bean id="ogcInfoRequest.wcs_1_0_0"
		class="org.opengeoportal.ogc.wcs.wcs1_0_0.WcsDescribeCoverage1_0_0"
		scope="prototype" />

	<beans:bean id="augmentedRecordRetriever"
		class="org.opengeoportal.ogc.AugmentedSolrRecordRetrieverImpl" scope="prototype" />

	<beans:bean id="wmcCreator" class="org.opengeoportal.ogc.WmcCreatorImpl"
		scope="prototype" />

	<task:annotation-driven executor="executor" />

	<task:executor id="executor" 
		pool-size="${threadPool.executor}" 
		queue-capacity="100"
		rejection-policy="CALLER_RUNS"/>

	<task:scheduler id="scheduler" pool-size="${threadPool.scheduler}" />
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="cleanupDirectory.download" method="cleanupDownloadDirectory"
			fixed-rate="${cleanupInterval}" />
	</task:scheduled-tasks>

</beans:beans>
